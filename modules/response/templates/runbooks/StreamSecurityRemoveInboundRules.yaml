schemaVersion: '0.3'
assumeRole: '{{ AutomationAssumeRole }}'
description: >-
  Remove inbound rules from a security group where the source is 0.0.0.0/0.
parameters:
  AutomationAssumeRole:
    type: String
    description: >-
      The IAM role that allows Systems Manager Automation to perform the actions on your behalf.
  Region:
    type: String
    description: The AWS region where the security group exists.
  SecurityGroupId:
    type: String
    description: The ID of the security group.
mainSteps:
  - name: removeInboundRules
    action: 'aws:executeScript'
    inputs:
      Runtime: python3.11
      Handler: script_handler
      Script: |
        import boto3

        def remove_0_0_0_0_rules(security_group_id, region):
            ec2 = boto3.client('ec2', region_name=region)

            # Describe security group to get inbound rules
            sg = ec2.describe_security_groups(GroupIds=[security_group_id])['SecurityGroups'][0]
            inbound_rules = sg.get('IpPermissions', [])

            for rule in inbound_rules:
                protocol = rule.get('IpProtocol')
                from_port = rule.get('FromPort')
                to_port = rule.get('ToPort')
                ip_ranges = rule.get('IpRanges', [])

                # Check if any of the IP ranges include 0.0.0.0/0
                for ip_range in ip_ranges:
                    if ip_range.get('CidrIp') == '0.0.0.0/0':
                        # Remove the offending rule
                        try:
                            ec2.revoke_security_group_ingress(
                                GroupId=security_group_id,
                                IpPermissions=[{
                                    'IpProtocol': protocol,
                                    'FromPort': from_port,
                                    'ToPort': to_port,
                                    'IpRanges': [{'CidrIp': '0.0.0.0/0'}]
                                }]
                            )
                            print(f"Removed rule: {protocol} {from_port}-{to_port} 0.0.0.0/0")
                        except Exception as e:
                            raise Exception(f"Failed to remove rule: {protocol} {from_port}-{to_port} 0.0.0.0/0. Error: {e}")

        def script_handler(event, context):
            region = event['Region']
            security_group_id = event['SecurityGroupId']
            remove_0_0_0_0_rules(security_group_id, region)
      InputPayload:
        Region: "{{Region}}"
        SecurityGroupId: "{{SecurityGroupId}}"
